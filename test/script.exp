#!/usr/local/bin/expect -f
#
# This Expect script was generated by autoexpect on Wed Oct 28 08:13:19 2020
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "ls"
expect -exact "ls"
send -- " "
expect -exact ""
send -- ""
expect -exact "l "
send -- ""
expect -exact " "
send -- "te"
expect -exact "te"
send -- "lnet 10.0.0.25 8888\r"
expect -exact "\[?2004l\r\r
Trying 10.0.0.25...\r
Connected to 10.0.0.25.\r
Escape character is '^\]'.\r
"
send -- "<s>\r"
expect -exact "<s>\r
<p0><iDCC-EX V-0.2.0 / MEGA / STANDARD_MOTOR_SHIELD G-9db6d36>"
send -- ""
expect -exact "^\]\r
telnet> "
send -- "close\r"
expect -exact "close\r
Connection closed.\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "ls"
expect -exact "ls"
send -- " s*\r"
expect -exact "\[?2004l\r\r
script.exp\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "mo"
expect -exact "mo"
send -- "re scr	"
expect -exact "ipt.exp\[1m \[0m"
send -- "\r"
expect -exact "\[0m \[?2004l\r\r
\[?1h=\r\r\[K\[7mscript.exp (END)\[27m\[K"
send -- " "
expect -exact "\r\[K\r\[K\[?1l>\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "vi"
expect -exact "vi"
send -- " script.exp\r"
expect -exact "\[?2004l\r\r
\[?1049h\[>4;2m\[?1h=\[?2004h\[1;29r\[?12h\[?12l\[22;2t\[22;1t\[27m\[29m\[m\[H\[2J\[?25l\[29;1H\"script.exp\" 0L, 0C\[2;1Hâ–½\[6n\[2;1H  \[1;1H\[>c\]10;?\]11;?"
send -- "\[2;2R\[?1;2c"
expect -exact "\[2;1H\[94m~                                                                                \[3;1H~                                                                                \[4;1H~                                                                                \[5;1H~                                                                                \[6;1H~                                                                                \[7;1H~                                                                                \[8;1H~                                                                                \[9;1H~                                                                                \[10;1H~                                                                                \[11;1H~                                                                                \[12;1H~                                                                                \[13;1H~                                                                                \[14;1H~                                                                                \[15;1H~                                                                                \[16;1H~                                                                                \[17;1H~                                                                                \[18;1H~                                                                                \[19;1H~                                                                                \[20;1H~                                                                                \[21;1H~                                                                                \[22;1H~                                                                                \[23;1H~                                                                                \[24;1H~                                                                                \[25;1H~                                                                                \[26;1H~                                                                                \[27;1H~                                                                                \[28;1H~                                                                                \[1;1H\[?25h"
send -- ":"
expect -exact "\[?25l\[m\[29;1H\[K\[29;1H:\[?2004h\[?25h"
send -- "q\r"
expect -exact "q\r"
expect -exact "\[?25l\[?2004l\[23;2t\[23;1t\[29;1H\[K\[29;1H\[?2004l\[?1l>\[?25h\[>4;m\[?1049l\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "ma"
expect -exact "ma"
send -- " "
expect -exact ""
send -- "n autoexpect\r"
expect -exact "\[?2004l\r\r
\[?1049h\[?1h=\rAUTOEXPECT(1)                                              AUTOEXPECT(1)\r
\r
\[1mNAME\[0m\r
       autoexpect - generate an Expect script from watching a session\r
\r
\[1mSYNOPSIS\[0m\r
       \[1mautoexpect\[0m \[ \[4margs\[24m \] \[ \[4mprogram\[24m \[4margs...\[24m  \]\r
\r
\[1mINTRODUCTION\[0m\r
       autoexpect  watches you interacting with another program and cre-\r
       ates an Expect script that  reproduces  your  interactions.   For\r
       straightline  scripts,  autoexpect  saves  substantial  time over\r
       writing scripts by hand.  Even if you are an Expect  expert,  you\r
       will  find  it  convenient to use autoexpect to automate the more\r
       mindless parts of interactions.  It is much easier  to  cut/paste\r
       hunks  of  autoexpect  scripts  together  than to write them from\r
       scratch.  And if you are a beginner, you may be able to get  away\r
       with  learning nothing more about Expect than how to call autoex-\r
       pect.\r
\r
       The simplest way to use autoexpect is to call it from the command\r
       line with no arguments.  For example:\r
\r
            % autoexpect\r
\r
       By  default,  autoexpect spawns a shell for you.  Given a program\r
       name and arguments, autoexpect spawns that program.  For example:\r
\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K            % autoexpect ftp ftp.cme.nist.gov\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       Once  your  spawned  program is running, interact normally.  When\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       you have exited the shell (or program that you specified),  auto-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       expect  will create a new script for you.  By default, autoexpect\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       writes the new script to \"script.exp\".   You  can  override  this\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       with the -f flag followed by a new script name.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       The  following example runs \"ftp ftp.cme.nist.gov\" and stores the\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       resulting Expect script in the file \"nist\".\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K            % autoexpect -f nist ftp ftp.cme.nist.gov\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       It is important to understand that autoexpect does not  guarantee\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       a  working  script because it necessarily has to guess about cer-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       tain things - and occasionally it guesses wrong.  However, it  is\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       usually  very easy to identify and fix these problems.  The typi-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       cal problems are:\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K              o   Timing.  A surprisingly large number of programs  (rn,\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ksh,  zsh,  telnet,  etc.)  and devices (e.g., modems)\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ignore keystrokes  that  arrive  \"too  quickly\"  after\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  prompts.   If  you  find your new script hanging up at\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  one spot, try adding a short  sleep  just  before  the\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  previous send.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  You  can  force this behavior throughout by overriding\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  the variable \"force_conservative\" near  the  beginning\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  of  the  generated  script.   This \"conservative\" mode\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  makes  autoexpect  automatically  pause  briefly  (one\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  tenth  of  a  second)  before  sending each character.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  This pacifies every program I know of.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  This conservative mode is useful if you just  want  to\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  quickly reassure yourself that the problem is a timing\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  one (or if you really don't care about  how  fast  the\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  script  runs).   This  same  mode can be forced before\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  script generation by using the -c flag.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  Fortunately, these timing spots are rare.   For  exam-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ple, telnet ignores characters only after entering its\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  escape sequence.  Modems only ignore characters  imme-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  diately  after  connecting to them for the first time.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  A few programs exhibit this behavior all the time  but\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  typically  have  a switch to disable it.  For example,\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  rn's -T flag disables this behavior.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  The following example starts autoexpect  in  conserva-\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  tive mode.\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                       autoexpect -c\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  The -C flag defines a key to toggle conservative mode.\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  The following example starts autoexpect  (in  non-con-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  servative mode) with ^L as the toggle.  (Note that the\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ^L is entered literally - i.e., enter a real  control-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  L).\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                       autoexpect -C ^L\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  The  following  example starts autoexpect in conserva-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  tive mode with ^L as the toggle.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                       autoexpect -c -C ^L\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K              o   Echoing.  Many program echo characters.  For  example,\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  if  you  type \"more\" to a shell, what autoexpect actu-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ally sees is:\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                       you typed 'm',\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                       computer typed 'm',\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                       you typed 'o',\r
:\[K"
send -- "OBOBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                       computer typed 'o',\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                       you typed 'r',\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                       computer typed 'r',\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                       ...\r
:\[K"
send -- "OBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  Without specific  knowledge  of  the  program,  it  is\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  impossible  to  know  if  you  are waiting to see each\r
:\[K"
send -- "OBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  character echoed before typing the next.   If  autoex-\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  pect  sees characters being echoed, it assumes that it\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  can send them all as a group rather than  interleaving\r
:\[K"
send -- "OBOBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  them the way they originally appeared.  This makes the\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  script more pleasant to read.  However, it could  con-\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ceivably be incorrect if you really had to wait to see\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  each character echoed.\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K              o   Change.  Autoexpect records every character  from  the\r
:\[K"
send -- "OBOBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  interaction  in the script.  This is desirable because\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  it gives you the ability to make judgements about what\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  is  important  and what can be replaced with a pattern\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  match.\r
:\[K"
send -- "OBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  On the other hand, if you use  commands  whose  output\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  differs from run to run, the generated scripts are not\r
:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  if  you  type \"more\" to a shell, what autoexpect actu-\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM              o   Echoing.  Many program echo characters.  For  example,\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -c -C ^L\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  tive mode with ^L as the toggle.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The  following  example starts autoexpect in conserva-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -C ^L\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  L).\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  ^L is entered literally - i.e., enter a real  control-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  servative mode) with ^L as the toggle.  (Note that the\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The following example starts autoexpect  (in  non-con-\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The -C flag defines a key to toggle conservative mode.\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -c\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  tive mode.\r
\[29;1H\r\[K:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  Without specific  knowledge  of  the  program,  it  is\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  impossible  to  know  if  you  are waiting to see each\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  character echoed before typing the next.   If  autoex-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  pect  sees characters being echoed, it assumes that it\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  can send them all as a group rather than  interleaving\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  them the way they originally appeared.  This makes the\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  script more pleasant to read.  However, it could  con-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ceivably be incorrect if you really had to wait to see\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  each character echoed.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K              o   Change.  Autoexpect records every character  from  the\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  interaction  in the script.  This is desirable because\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  it gives you the ability to make judgements about what\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  is  important  and what can be replaced with a pattern\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  match.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  On the other hand, if you use  commands  whose  output\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  differs from run to run, the generated scripts are not\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  going to be correct.  For example, the \"date\"  command\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  always  produces  different output.  So using the date\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  command while running autoexpect is a sure way to pro-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  duce  a  script that will require editing in order for\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  it to work.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  The -p flag puts autoexpect into  \"prompt  mode\".   In\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  this  mode, autoexpect will only look for the the last\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  line of program output - which is usually the  prompt.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  This  handles  the  date  problem (see above) and most\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  others.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  The following  example  starts  autoexpect  in  prompt\r
:\[K"
send -- "OBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  mode.\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                       autoexpect -p\r
:\[K"
send -- "OBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  The  -P flag defines a key to toggle prompt mode.  The\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  following example  starts  autoexpect  (in  non-prompt\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  mode)  with  ^P  as  the  toggle.  Note that the ^P is\r
:\[K"
send -- "OBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  entered literally - i.e., enter a real control-P.\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                       autoexpect -P ^P\r
:\[K"
send -- "OBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  The following example starts autoexpect in prompt mode\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K                  with ^P as the toggle.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OBOBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                       autoexpect -p -P ^P\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\[1mOTHER\[0m \[1mFLAGS\[0m\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K       The \[1m-quiet\[0m flag disables informational messages produced by auto-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       expect.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       The \[1m-Q\[0m flag names a quote character which can be  used  to  enter\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       characters  that  autoexpect would otherwise consume because they\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       are used as toggles.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       The following example shows a number of flags with quote used  to\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       provide a way of entering the toggles literally.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K            autoexpect -P ^P -C ^L -Q ^Q\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\[1mSTYLE\[0m\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       I  don't know if there is a \"style\" for Expect programs but auto-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       expect should definitely not be held up as any  model  of  style.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       For example, autoexpect uses features of Expect that are intended\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       specifically for computer-generated scripting.  So don't  try  to\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       faithfully write scripts that appear as if they were generated by\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       autoexpect.  This is not useful.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       On the other hand, autoexpect scripts  do  show  some  worthwhile\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       things.   For  example, you can see how any string must be quoted\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       in order to use it in a Tcl script simply by running the  strings\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       through autoexpect.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\[1mSEE\[0m \[1mALSO\[0m\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       \[4m\"Exploring\[24m \[4mExpect:\[24m \[4mA\[24m \[4mTcl-Based\[24m \[4mToolkit\[24m \[4mfor\[24m \[4mAutomating\[24m \[4mInteractive\[24m\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       \[4mPrograms\"\[24m by Don Libes, O'Reilly and Associates, January 1995.\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\[1mAUTHOR\[0m\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K       Don Libes, National Institute of Standards and Technology\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       \[1mexpect\[0m and \[1mautoexpect\[0m are in the public domain.  NIST and I would\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       appreciate credit if these programs or parts of them are used.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                              30 June 1995                 AUTOEXPECT(1)\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       The following example shows a number of flags with quote used  to\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                              30 June 1995                 AUTOEXPECT(1)\r
\[7m(END)\[27m\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K"
send -- "OBOBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r\[K\[7m(END)\[27m\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       The following example shows a number of flags with quote used  to\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       are used as toggles.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       characters  that  autoexpect would otherwise consume because they\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       The \[1m-Q\[0m flag names a quote character which can be  used  to  enter\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       expect.\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       The \[1m-quiet\[0m flag disables informational messages produced by auto-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\[1mOTHER\[0m \[1mFLAGS\[0m\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -p -P ^P\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  with ^P as the toggle.\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The following example starts autoexpect in prompt mode\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       things.   For  example, you can see how any string must be quoted\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       in order to use it in a Tcl script simply by running the  strings\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       through autoexpect.\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\[1mSEE\[0m \[1mALSO\[0m\r
:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -p -P ^P\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  with ^P as the toggle.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The following example starts autoexpect in prompt mode\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -P ^P\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  entered literally - i.e., enter a real control-P.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  mode)  with  ^P  as  the  toggle.  Note that the ^P is\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  following example  starts  autoexpect  (in  non-prompt\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The  -P flag defines a key to toggle prompt mode.  The\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -p\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  mode.\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The following  example  starts  autoexpect  in  prompt\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  others.\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  This  handles  the  date  problem (see above) and most\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  line of program output - which is usually the  prompt.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  this  mode, autoexpect will only look for the the last\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The -p flag puts autoexpect into  \"prompt  mode\".   In\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  it to work.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  duce  a  script that will require editing in order for\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  command while running autoexpect is a sure way to pro-\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  always  produces  different output.  So using the date\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  going to be correct.  For example, the \"date\"  command\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  differs from run to run, the generated scripts are not\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  On the other hand, if you use  commands  whose  output\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  match.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  is  important  and what can be replaced with a pattern\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  it gives you the ability to make judgements about what\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  interaction  in the script.  This is desirable because\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM              o   Change.  Autoexpect records every character  from  the\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  each character echoed.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  ceivably be incorrect if you really had to wait to see\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  script more pleasant to read.  However, it could  con-\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  them the way they originally appeared.  This makes the\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  can send them all as a group rather than  interleaving\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  pect  sees characters being echoed, it assumes that it\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  character echoed before typing the next.   If  autoex-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  impossible  to  know  if  you  are waiting to see each\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  Without specific  knowledge  of  the  program,  it  is\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       ...\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       computer typed 'r',\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       you typed 'r',\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       computer typed 'o',\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       you typed 'o',\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       computer typed 'm',\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       you typed 'm',\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  ally sees is:\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  if  you  type \"more\" to a shell, what autoexpect actu-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM              o   Echoing.  Many program echo characters.  For  example,\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -c -C ^L\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  tive mode with ^L as the toggle.\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The  following  example starts autoexpect in conserva-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -C ^L\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  L).\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  ^L is entered literally - i.e., enter a real  control-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  servative mode) with ^L as the toggle.  (Note that the\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The following example starts autoexpect  (in  non-con-\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The -C flag defines a key to toggle conservative mode.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                       autoexpect -c\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  tive mode.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  The following example starts autoexpect  in  conserva-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  rn's -T flag disables this behavior.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  typically  have  a switch to disable it.  For example,\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  A few programs exhibit this behavior all the time  but\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  diately  after  connecting to them for the first time.\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  escape sequence.  Modems only ignore characters  imme-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  ple, telnet ignores characters only after entering its\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  Fortunately, these timing spots are rare.   For  exam-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  script generation by using the -c flag.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  script  runs).   This  same  mode can be forced before\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  one (or if you really don't care about  how  fast  the\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  quickly reassure yourself that the problem is a timing\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  This conservative mode is useful if you just  want  to\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  This pacifies every program I know of.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  tenth  of  a  second)  before  sending each character.\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  makes  autoexpect  automatically  pause  briefly  (one\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  of  the  generated  script.   This \"conservative\" mode\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  the variable \"force_conservative\" near  the  beginning\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  You  can  force this behavior throughout by overriding\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  previous send.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  one spot, try adding a short  sleep  just  before  the\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  prompts.   If  you  find your new script hanging up at\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  ignore keystrokes  that  arrive  \"too  quickly\"  after\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM                  ksh,  zsh,  telnet,  etc.)  and devices (e.g., modems)\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM              o   Timing.  A surprisingly large number of programs  (rn,\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       cal problems are:\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       usually  very easy to identify and fix these problems.  The typi-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       tain things - and occasionally it guesses wrong.  However, it  is\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       a  working  script because it necessarily has to guess about cer-\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       It is important to understand that autoexpect does not  guarantee\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM            % autoexpect -f nist ftp ftp.cme.nist.gov\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOAOAOAOAOAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       resulting Expect script in the file \"nist\".\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       The  following example runs \"ftp ftp.cme.nist.gov\" and stores the\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       with the -f flag followed by a new script name.\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       writes the new script to \"script.exp\".   You  can  override  this\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       expect  will create a new script for you.  By default, autoexpect\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       you have exited the shell (or program that you specified),  auto-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       Once  your  spawned  program is running, interact normally.  When\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM            % autoexpect ftp ftp.cme.nist.gov\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       name and arguments, autoexpect spawns that program.  For example:\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       By  default,  autoexpect spawns a shell for you.  Given a program\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM            % autoexpect\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       line with no arguments.  For example:\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       The simplest way to use autoexpect is to call it from the command\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       pect.\r
\[29;1H\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       with  learning nothing more about Expect than how to call autoex-\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       scratch.  And if you are a beginner, you may be able to get  away\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       hunks  of  autoexpect  scripts  together  than to write them from\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       mindless parts of interactions.  It is much easier  to  cut/paste\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       will  find  it  convenient to use autoexpect to automate the more\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       writing scripts by hand.  Even if you are an Expect  expert,  you\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       straightline  scripts,  autoexpect  saves  substantial  time over\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       ates an Expect script that  reproduces  your  interactions.   For\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       autoexpect  watches you interacting with another program and cre-\r
\[29;1H\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\[1mINTRODUCTION\[0m\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       \[1mautoexpect\[0m \[ \[4margs\[24m \] \[ \[4mprogram\[24m \[4margs...\[24m  \]\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\[1mSYNOPSIS\[0m\r
\[29;1H\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM       autoexpect - generate an Expect script from watching a session\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\[1mNAME\[0m\r
\[29;1H\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HM\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\[HMAUTOEXPECT(1)                                              AUTOEXPECT(1)\r
\[29;1H\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OAOA"
expect -exact "\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K\r\[K \[KESCESC\[KOO\[KAA\r\[K\r\[K:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K            % autoexpect ftp ftp.cme.nist.gov\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       Once  your  spawned  program is running, interact normally.  When\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K       you have exited the shell (or program that you specified),  auto-\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K       expect  will create a new script for you.  By default, autoexpect\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       writes the new script to \"script.exp\".   You  can  override  this\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       with the -f flag followed by a new script name.\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K       The  following example runs \"ftp ftp.cme.nist.gov\" and stores the\r
:\[K"
send -- "OBOBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       resulting Expect script in the file \"nist\".\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K            % autoexpect -f nist ftp ftp.cme.nist.gov\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       It is important to understand that autoexpect does not  guarantee\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       a  working  script because it necessarily has to guess about cer-\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       tain things - and occasionally it guesses wrong.  However, it  is\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K       usually  very easy to identify and fix these problems.  The typi-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       cal problems are:\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K              o   Timing.  A surprisingly large number of programs  (rn,\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ksh,  zsh,  telnet,  etc.)  and devices (e.g., modems)\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ignore keystrokes  that  arrive  \"too  quickly\"  after\r
:\[K"
send -- "q"
expect -exact "\r\[K\[?1l>\[?1049l\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "\r"
expect -exact "\[?2004l\r\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "\[A"
expect -exact "man autoexpect"
send -- "\[A"
expect -exact "\[14Dvi script.exp "
send -- "\[A"
expect -exact "\[13Dmore script.exp"
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact ""
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact "m "
send -- ""
expect -exact " "
send -- "au"
expect -exact "au"
send -- "to"
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact "a "
send -- ""
expect -exact " "
send -- "ma"
expect -exact "ma"
send -- "n a"
expect -exact " "
send -- ""
expect -exact ""
send -- ""
expect -exact " "
send -- ""
expect -exact "m "
send -- ""
expect -exact " "
send -- "\[A"
expect -exact "ls s*"
send -- "\r"
expect -exact "\[?2004l\r\r
script.exp\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "m\[A"
expect -exact "ls s*"
send -- "\[A"
expect -exact "man autoexpect"
send -- "\r"
expect -exact "\[?2004l\r\r
\[?1049h\[?1h=\rAUTOEXPECT(1)                                              AUTOEXPECT(1)\r
\r
\[1mNAME\[0m\r
       autoexpect - generate an Expect script from watching a session\r
\r
\[1mSYNOPSIS\[0m\r
       \[1mautoexpect\[0m \[ \[4margs\[24m \] \[ \[4mprogram\[24m \[4margs...\[24m  \]\r
\r
\[1mINTRODUCTION\[0m\r
       autoexpect  watches you interacting with another program and cre-\r
       ates an Expect script that  reproduces  your  interactions.   For\r
       straightline  scripts,  autoexpect  saves  substantial  time over\r
       writing scripts by hand.  Even if you are an Expect  expert,  you\r
       will  find  it  convenient to use autoexpect to automate the more\r
       mindless parts of interactions.  It is much easier  to  cut/paste\r
       hunks  of  autoexpect  scripts  together  than to write them from\r
       scratch.  And if you are a beginner, you may be able to get  away\r
       with  learning nothing more about Expect than how to call autoex-\r
       pect.\r
\r
       The simplest way to use autoexpect is to call it from the command\r
       line with no arguments.  For example:\r
\r
            % autoexpect\r
\r
       By  default,  autoexpect spawns a shell for you.  Given a program\r
       name and arguments, autoexpect spawns that program.  For example:\r
\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K            % autoexpect ftp ftp.cme.nist.gov\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       Once  your  spawned  program is running, interact normally.  When\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K       you have exited the shell (or program that you specified),  auto-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       expect  will create a new script for you.  By default, autoexpect\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       writes the new script to \"script.exp\".   You  can  override  this\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       with the -f flag followed by a new script name.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OBOB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       The  following example runs \"ftp ftp.cme.nist.gov\" and stores the\r
:\[K\r\[K \[KESCESC\[KOO\[KBB\r\[K       resulting Expect script in the file \"nist\".\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K            % autoexpect -f nist ftp ftp.cme.nist.gov\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       It is important to understand that autoexpect does not  guarantee\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       a  working  script because it necessarily has to guess about cer-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       tain things - and occasionally it guesses wrong.  However, it  is\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       usually  very easy to identify and fix these problems.  The typi-\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K       cal problems are:\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K              o   Timing.  A surprisingly large number of programs  (rn,\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ksh,  zsh,  telnet,  etc.)  and devices (e.g., modems)\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  ignore keystrokes  that  arrive  \"too  quickly\"  after\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  prompts.   If  you  find your new script hanging up at\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  one spot, try adding a short  sleep  just  before  the\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  previous send.\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  You  can  force this behavior throughout by overriding\r
:\[K"
send -- "OB"
expect -exact "\r\[K \[KESCESC\[KOO\[KBB\r\[K                  the variable \"force_conservative\" near  the  beginning\r
:\[K"
send -- "q"
expect -exact "\r\[K\[?1l>\[?1049l\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "\r"
expect -exact "\[?2004l\r\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "ma"
expect -exact "ma"
send -- "n"
expect -exact " "
send -- ""
expect -exact "m "
send -- ""
expect -exact " "
send -- "au"
expect -exact "au"
send -- "toecpetc "
expect -exact ""
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- "xpect jmri "
expect -exact ""
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- "-f jmri telnet 10.0.0.25 8888\r"
expect -exact "\[?2004l\r\r
autoexpect started, file is jmri\r
Trying 10.0.0.25...\r
Connected to 10.0.0.25.\r
Escape character is '^\]'.\r
"
send -- "s>"
expect -exact " "
send -- ""
expect -exact " "
send -- "<s>\r"
expect -exact "<s>\r
<p0><iDCC-EX V-0.2.0 / MEGA / STANDARD_MOTOR_SHIELD G-9db6d36>"
send -- "\r"
expect -exact "\r
"
send -- ""
expect -exact "^\]\r
telnet> "
send -- "close\r"
expect -exact "close\r
Connection closed.\r
autoexpect done, file is jmri\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "mo"
expect -exact "mo"
send -- "re jmri\r"
expect -exact "\[?2004l\r\r
\[?1h=\r#!/usr/local/bin/expect -f\r
#\r
# This Expect script was generated by autoexpect on Wed Oct 28 11:03:05 2020\r
# Expect and autoexpect were both written by Don Libes, NIST.\r
#\r
# Note that autoexpect does not guarantee a working script.  It\r
# necessarily has to guess about certain things.  Two reasons a script\r
# might fail are:\r
#\r
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,\r
# etc.) and devices discard or ignore keystrokes that arrive \"too\r
# quickly\" after prompts.  If you find your new script hanging up at\r
# one spot, try adding a short sleep just before the previous send.\r
# Setting \"force_conservative\" to 1 (see below) makes Expect do this\r
# automatically - pausing briefly before sending each character.  This\r
# pacifies every program I know of.  The -c flag makes the script do\r
# this in the first place.  The -C flag allows you to define a\r
# character to toggle this mode off and on.\r
\r
set force_conservative 0  ;# set to 1 to force conservative mode even if\r
                          ;# script wasn't run conservatively originally\r
if {\$force_conservative} {\r
        set send_slow {1 .1}\r
        proc send {ignore arg} {\r
                sleep .1\r
                exp_send -s -- \$arg\r
        }\r
}\r
\[7mjmri\[27m\[K"
send -- ":"
expect -exact "\r\[K \[K::"
send -- "q"
expect -exact "\[Kqq\r\[K\[?1l>\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "\r"
expect -exact "\[?2004l\r\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "vi"
expect -exact "vi"
send -- " k"
expect -exact " "
send -- "jmri\r"
expect -exact "\[?2004l\r\r
\[?1049h\[>4;2m\[?1h=\[?2004h\[1;29r\[?12h\[?12l\[22;2t\[22;1t\[27m\[29m\[m\[H\[2J\[?25l\[29;1H\"jmri\" 66L, 2143C\[2;1Hâ–½\[6n\[2;1H  \[1;1H\[>c\]10;?\]11;?"
send -- "\[2;2R\[?1;2c"
expect -exact "\[1;1H#!/usr/local/bin/expect -f\r
#\r
# This Expect script was generated by autoexpect on Wed Oct 28 11:03:05 2020\r
# Expect and autoexpect were both written by Don Libes, NIST.\r
#\r
# Note that autoexpect does not guarantee a working script.  It\r
# necessarily has to guess about certain things.  Two reasons a script\r
# might fail are:\r
#\r
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,\r
# etc.) and devices discard or ignore keystrokes that arrive \"too\r
# quickly\" after prompts.  If you find your new script hanging up at\r
# one spot, try adding a short sleep just before the previous send.\r
# Setting \"force_conservative\" to 1 (see below) makes Expect do this\r
# automatically - pausing briefly before sending each character.  This\r
# pacifies every program I know of.  The -c flag makes the script do\r
# this in the first place.  The -C flag allows you to define a\r
# character to toggle this mode off and on.\r
\r
set force_conservative 0  ;# set to 1 to force conservative mode even if\[21;27H;# script wasn't run conservatively originally\r
if {\$force_conservative} {\[23;9Hset send_slow {1 .1}\[24;9Hproc send {ignore arg} {\[25;17Hsleep .1\[26;17Hexp_send -s -- \$arg\[27;9H}\r
}\[1;1H\[?25h"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\[21;8H"
send -- "OB"
expect -exact "\r
"
send -- "OB"
expect -exact "\[23;8H"
send -- "OB"
expect -exact "\[24;8H"
send -- "OB"
expect -exact "\[25;8H"
send -- "OB"
expect -exact "\[26;8H"
send -- "OB"
expect -exact "\[27;8H"
send -- "OB"
expect -exact "\[?25l\[22;26H\[106m{\[28;1H}\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[m\[28;1H\r
\[1;29r\[21;26H{\[27;1H}\[29;1H\[K\[28;1H\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H#\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# 2) differing output - Some programs produce different output each time\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# they run.  The \"date\" command is an obvious example.  Another is\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# ftp, if it produces throughput statistics at the end of a file\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# transfer.  If this causes a problem, delete these patterns or replace\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# them with wildcards.  An alternative is to use the -p flag (for\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# \"prompt\") which makes Expect only look for the last line of output\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# (i.e., the prompt).  The -P flag allows you to define a character to\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# toggle this mode off and on.\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H#\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# Read the man page for more info.\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H#\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H# -Don\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hset timeout -1\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hspawn telnet 10.0.0.25 8888\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hmatch_max 100000\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hexpect -exact \"Trying 10.0.0.25...\\r\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1HConnected to 10.0.0.25.\\r\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1HEscape character is '^\\\]'.\\r\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H\"\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hsend -- \"s>\[34m^?\[m\"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hexpect -exact \"\[34m^H\[m \[34m^H\[m\"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hsend -- \"\[34m^?\[m\"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hexpect -exact \"\[34m^H\[m \[34m^H\[m\"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hsend -- \"<s>\\r\"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hexpect -exact \"<s>\\r\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H<p0><iDCC-EX V-0.2.0 / MEGA / STANDARD_MOTOR_SHIELD G-9db6d36>\"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hsend -- \"\\r\"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hexpect -exact \"\\r\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1H\"\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hsend -- \"\[34m^\]\[m\"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hexpect -exact \"^\\\]\\r\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Htelnet> \"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hsend -- \"close\\r\"\r\[?25h"
send -- "OB"
expect -exact "\[?25l\[1;28r\[28;1H\r
\[1;29r\[28;1Hexpect eof\r\[?25h"
send -- "OB"
expect -exact ""
send -- "OB"
expect -exact ""
send -- "OA"
expect -exact "\[27;1H"
send -- "OA"
expect -exact "\[26;1H"
send -- "OA"
expect -exact "\[25;1H"
send -- "OA"
expect -exact "\[24;1H"
send -- "OA"
expect -exact "\[23;1H"
send -- "OA"
expect -exact "\[22;1H"
send -- "OA"
expect -exact "\[21;1H"
send -- "OA"
expect -exact "\[20;1H"
send -- "OA"
expect -exact "\[19;1H"
send -- "OA"
expect -exact "\[18;1H"
send -- "OA"
expect -exact "\[17;1H"
send -- "OA"
expect -exact "\[16;1H"
send -- "OA"
expect -exact "\[15;1H"
send -- "OA"
expect -exact "\[14;1H"
send -- "OB"
expect -exact "\r
"
send -- "OA"
expect -exact "\[14;1H"
send -- "dd"
expect -exact "\[?25l\[14;28r\[28;1H\r
\[1;29r\[28;1H\[94m~                                                                                \[14;1H\[?25h"
send -- "dd"
expect -exact "\[?25l\[14;28r\[m\[28;1H\r
\[1;29r\[28;1H\[94m~                                                                                \[14;1H\[?25h"
send -- "dd"
expect -exact "\[?25l\[14;28r\[m\[28;1H\r
\[1;29r\[28;1H\[94m~                                                                                \[14;1H\[?25h"
send -- "dd"
expect -exact "\[?25l\[14;28r\[m\[28;1H\r
\[1;29r\[28;1H\[94m~                                                                                \[14;1H\[?25h"
send -- ""
expect -exact ""
send -- ":"
expect -exact "\[?25l\[29;1H\[m:\[?2004h\[?25h"
send -- "wq\r"
expect -exact "wq\r"
expect -exact "\[?25l\[?2004l\"jmri\" 62L, 2077C written\r\[23;2t\[23;1t\r\r
\[?2004l\[?1l>\[?25h\[>4;m\[?1049l\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "ls"
expect -exact "ls"
send -- " -la\r"
expect -exact "\[?2004l\r\r
total 280\r
drwxr-xr-x@  6 gregor  staff    192 28 oct 11:04 .\r
drwxr-xr-x@ 12 gregor  staff    384 28 oct 11:04 ..\r
-rw-r--r--   1 gregor  staff    504 20 sep 08:13 README\r
-rwxr-xr-x   1 gregor  staff   2077 28 oct 11:04 jmri\r
-rwxr-xr-x   1 gregor  staff    120 28 oct 07:45 nettest.sh\r
-rwxr-xr-x   1 gregor  staff  81920 28 oct 11:04 script.exp\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "ls"
expect -exact "ls"
send -- " -la\r"
expect -exact "\[?2004l\r\r
total 280\r
drwxr-xr-x@  6 gregor  staff    192 28 oct 11:04 .\r
drwxr-xr-x@ 12 gregor  staff    384 28 oct 11:04 ..\r
-rw-r--r--   1 gregor  staff    504 20 sep 08:13 README\r
-rwxr-xr-x   1 gregor  staff   2077 28 oct 11:04 jmri\r
-rwxr-xr-x   1 gregor  staff    120 28 oct 07:45 nettest.sh\r
-rwxr-xr-x   1 gregor  staff  81920 28 oct 11:04 script.exp\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "\r"
expect -exact "\[?2004l\r\r
\[1m\[7m%\[27m\[1m\[0m                                                                                \r \r\]7;file://APAFAM325926-2.local/Users/gregor/Documents/PlatformIO/Projects/EthernetInterface/test\r\[0m\[27m\[24m\[Jgregor@APAFAM325926-2 test % \[K\[?2004h"
send -- "ex"
expect -exact "ex"
send -- "it\r"
expect eof
